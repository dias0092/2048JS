{"version":3,"sources":["src/Grid.js","src/Tile.js","src/index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["GRID_SIZE","CELL_SIZE","CELL_GAP","_cells","WeakMap","_emptyCells","Grid","gridElement","_classCallCheck","_classPrivateFieldInitSpec","get","_get_emptyCells","set","writable","value","style","setProperty","concat","_classPrivateFieldSet","createCellElements","map","cellElement","index","Cell","Math","floor","_createClass","key","_classPrivateFieldGet","reduce","cellGrid","cell","y","x","randomEmptyCell","randomIndex","random","length","exports","default","filter","tile","_cellElement","_x","_y","_tile","_mergeTile","canAccept","mergeTile","mergeTiles","remove","cells","i","document","createElement","classList","add","push","append","Tile","tileContainer","arguments","undefined","_tileElement","_value","v","textContent","power","log2","backgroundLightness","waitForTransition","_this","animation","Promise","resolve","addEventListener","once","_Grid","_interopRequireDefault","require","_Tile","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_regeneratorRuntime","Op","Object","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","Array","from","test","isArray","len","arr2","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","apply","gameBoard","getElementById","grid","setupInput","window","handleInput","_handleInput","_callee","e","newTile","_callee$","_context","t0","canMoveUp","moveUp","canMoveDown","moveDown","canMoveLeft","moveLeft","canMoveRight","moveRight","alert","slideTiles","cellsByColumn","column","cellsByRow","row","all","flatMap","group","promises","lastValidCell","j","moveToCell","canMove","some","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","appendChild","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Function","deps","cached","cache","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const GRID_SIZE = 4;\r\nconst CELL_SIZE = 20;\r\nconst CELL_GAP = 2;\r\n\r\nexport default class Grid {\r\n  #cells;\r\n\r\n  constructor(gridElement) {\r\n    gridElement.style.setProperty(\"--grid-size\", GRID_SIZE);\r\n    gridElement.style.setProperty(\"--cell-size\", `${CELL_SIZE}vmin`);\r\n    gridElement.style.setProperty(\"--cell-gap\", `${CELL_GAP}vmin`);\r\n    this.#cells = createCellElements(gridElement).map((cellElement, index) => {\r\n      return new Cell(\r\n        cellElement,\r\n        index % GRID_SIZE,\r\n        Math.floor(index / GRID_SIZE)\r\n      );\r\n    });\r\n  }\r\n\r\n  get cells() {\r\n    return this.#cells;\r\n  }\r\n\r\n  get cellsByRow() {\r\n    return this.#cells.reduce((cellGrid, cell) => {\r\n      cellGrid[cell.y] = cellGrid[cell.y] || [];\r\n      cellGrid[cell.y][cell.x] = cell;\r\n      return cellGrid;\r\n    }, []);\r\n  }\r\n\r\n  get cellsByColumn() {\r\n    return this.#cells.reduce((cellGrid, cell) => {\r\n      cellGrid[cell.x] = cellGrid[cell.x] || [];\r\n      cellGrid[cell.x][cell.y] = cell;\r\n      return cellGrid;\r\n    }, []);\r\n  }\r\n\r\n  get #emptyCells() {\r\n    return this.#cells.filter((cell) => cell.tile == null);\r\n  }\r\n\r\n  randomEmptyCell() {\r\n    const randomIndex = Math.floor(Math.random() * this.#emptyCells.length);\r\n    return this.#emptyCells[randomIndex];\r\n  }\r\n}\r\n\r\nclass Cell {\r\n  #cellElement;\r\n  #x;\r\n  #y;\r\n  #tile;\r\n  #mergeTile;\r\n\r\n  constructor(cellElement, x, y) {\r\n    this.#cellElement = cellElement;\r\n    this.#x = x;\r\n    this.#y = y;\r\n  }\r\n\r\n  get x() {\r\n    return this.#x;\r\n  }\r\n\r\n  get y() {\r\n    return this.#y;\r\n  }\r\n\r\n  get tile() {\r\n    return this.#tile;\r\n  }\r\n\r\n  set tile(value) {\r\n    this.#tile = value;\r\n    if (value == null) return;\r\n    this.#tile.x = this.#x;\r\n    this.#tile.y = this.#y;\r\n  }\r\n\r\n  get mergeTile() {\r\n    return this.#mergeTile;\r\n  }\r\n\r\n  set mergeTile(value) {\r\n    this.#mergeTile = value;\r\n    if (value == null) return;\r\n    this.#mergeTile.x = this.#x;\r\n    this.#mergeTile.y = this.#y;\r\n  }\r\n\r\n  canAccept(tile) {\r\n    return (\r\n      this.tile == null ||\r\n      (this.mergeTile == null && this.tile.value === tile.value)\r\n    );\r\n  }\r\n\r\n  mergeTiles() {\r\n    if (this.tile == null || this.mergeTile == null) return;\r\n    this.tile.value = this.tile.value + this.mergeTile.value;\r\n    this.mergeTile.remove();\r\n    this.mergeTile = null;\r\n  }\r\n}\r\n\r\nfunction createCellElements(gridElement) {\r\n  const cells = [];\r\n  for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\r\n    const cell = document.createElement(\"div\");\r\n    cell.classList.add(\"cell\");\r\n    cells.push(cell);\r\n    gridElement.append(cell);\r\n  }\r\n  return cells;\r\n}\r\n","export default class Tile {\r\n  #tileElement;\r\n  #x;\r\n  #y;\r\n  #value;\r\n\r\n  constructor(tileContainer, value = Math.random() > 0.2 ? 2 : 4) {\r\n    this.#tileElement = document.createElement(\"div\");\r\n    this.#tileElement.classList.add(\"tile\");\r\n    tileContainer.append(this.#tileElement);\r\n    this.value = value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#value;\r\n  }\r\n\r\n  set value(v) {\r\n    this.#value = v;\r\n    this.#tileElement.textContent = v;\r\n    const power = Math.log2(v);\r\n    const backgroundLightness = 100 - power * 9;\r\n    this.#tileElement.style.setProperty(\r\n      \"--background-lightness\",\r\n      `${backgroundLightness}%`\r\n    );\r\n    this.#tileElement.style.setProperty(\r\n      \"--text-lightness\",\r\n      `${backgroundLightness <= 50 ? 90 : 10}%`\r\n    );\r\n  }\r\n\r\n  set x(value) {\r\n    this.#x = value;\r\n    this.#tileElement.style.setProperty(\"--x\", value);\r\n  }\r\n\r\n  set y(value) {\r\n    this.#y = value;\r\n    this.#tileElement.style.setProperty(\"--y\", value);\r\n  }\r\n\r\n  remove() {\r\n    this.#tileElement.remove();\r\n  }\r\n\r\n  waitForTransition(animation = false) {\r\n    return new Promise((resolve) => {\r\n      this.#tileElement.addEventListener(\r\n        animation ? \"animationend\" : \"transitionend\",\r\n        resolve,\r\n        {\r\n          once: true\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import Grid from \"./Grid.js\";\r\nimport Tile from \"./Tile.js\";\r\n\r\nconst gameBoard = document.getElementById(\"game-board\");\r\n\r\nconst grid = new Grid(gameBoard);\r\ngrid.randomEmptyCell().tile = new Tile(gameBoard);\r\ngrid.randomEmptyCell().tile = new Tile(gameBoard);\r\nsetupInput();\r\n\r\nfunction setupInput() {\r\n  window.addEventListener(\"keydown\", handleInput, { once: true });\r\n}\r\n\r\nasync function handleInput(e) {\r\n  switch (e.key) {\r\n    case \"ArrowUp\":\r\n      if (!canMoveUp()) {\r\n        setupInput();\r\n        return;\r\n      }\r\n      await moveUp();\r\n      break;\r\n    case \"ArrowDown\":\r\n      if (!canMoveDown()) {\r\n        setupInput();\r\n        return;\r\n      }\r\n      await moveDown();\r\n      break;\r\n    case \"ArrowLeft\":\r\n      if (!canMoveLeft()) {\r\n        setupInput();\r\n        return;\r\n      }\r\n      await moveLeft();\r\n      break;\r\n    case \"ArrowRight\":\r\n      if (!canMoveRight()) {\r\n        setupInput();\r\n        return;\r\n      }\r\n      await moveRight();\r\n      break;\r\n    default:\r\n      setupInput();\r\n      return;\r\n  }\r\n\r\n  grid.cells.forEach((cell) => cell.mergeTiles());\r\n\r\n  const newTile = new Tile(gameBoard);\r\n  grid.randomEmptyCell().tile = newTile;\r\n\r\n  if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()) {\r\n    newTile.waitForTransition(true).then(() => {\r\n      alert(\"You lose\");\r\n    });\r\n    return;\r\n  }\r\n\r\n  setupInput();\r\n}\r\n\r\nfunction moveUp() {\r\n  return slideTiles(grid.cellsByColumn);\r\n}\r\n\r\nfunction moveDown() {\r\n  return slideTiles(grid.cellsByColumn.map((column) => [...column].reverse()));\r\n}\r\n\r\nfunction moveLeft() {\r\n  return slideTiles(grid.cellsByRow);\r\n}\r\n\r\nfunction moveRight() {\r\n  return slideTiles(grid.cellsByRow.map((row) => [...row].reverse()));\r\n}\r\n\r\nfunction slideTiles(cells) {\r\n  return Promise.all(\r\n    cells.flatMap((group) => {\r\n      const promises = [];\r\n      for (let i = 1; i < group.length; i++) {\r\n        const cell = group[i];\r\n        if (cell.tile == null) continue;\r\n        let lastValidCell;\r\n        for (let j = i - 1; j >= 0; j--) {\r\n          const moveToCell = group[j];\r\n          if (!moveToCell.canAccept(cell.tile)) break;\r\n          lastValidCell = moveToCell;\r\n        }\r\n\r\n        if (lastValidCell != null) {\r\n          promises.push(cell.tile.waitForTransition());\r\n          if (lastValidCell.tile != null) {\r\n            lastValidCell.mergeTile = cell.tile;\r\n          } else {\r\n            lastValidCell.tile = cell.tile;\r\n          }\r\n          cell.tile = null;\r\n        }\r\n      }\r\n      return promises;\r\n    })\r\n  );\r\n}\r\n\r\nfunction canMoveUp() {\r\n  return canMove(grid.cellsByColumn);\r\n}\r\n\r\nfunction canMoveDown() {\r\n  return canMove(grid.cellsByColumn.map((column) => [...column].reverse()));\r\n}\r\n\r\nfunction canMoveLeft() {\r\n  return canMove(grid.cellsByRow);\r\n}\r\n\r\nfunction canMoveRight() {\r\n  return canMove(grid.cellsByRow.map((row) => [...row].reverse()));\r\n}\r\n\r\nfunction canMove(cells) {\r\n  return cells.some((group) => {\r\n    return group.some((cell, index) => {\r\n      if (index === 0) return false;\r\n      if (cell.tile == null) return false;\r\n      const moveToCell = group[index - 1];\r\n      return moveToCell.canAccept(cell.tile);\r\n    });\r\n  });\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}